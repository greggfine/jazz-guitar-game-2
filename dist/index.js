"use strict"; !function () { const e = new (window.AudioContext || window.webkitAudioContext); let t, n, o, a, c = e.createGain(), i = e.createGain(), r = e.createGain(), s = e.createGain(), l = e.createGain(); const u = document.querySelector(".score"), d = document.querySelector(".lives"), m = document.querySelector(".start-game-btn"), y = document.querySelector(".start-game-display"), f = document.querySelector(".question-answer-display"), p = document.querySelector(".score-wrapper"), g = document.querySelector(".lives-wrapper"), h = document.querySelector(".volume-control"), T = document.querySelector(".question-count"), C = document.querySelector(".who-is-this"), x = document.querySelector(".play-game"), S = x.querySelector(".btn-group"), v = document.querySelector(".game-over"), q = document.querySelector(".container"), A = document.createElement("img"); let E, w = 0, L = 1, k = 3; u.textContent = w, T.textContent = `${L}/10`, d.textContent = k, h.addEventListener("click", function () { .0010000000474974513 === l.gain.value ? l.gain.exponentialRampToValueAtTime(1, e.currentTime + .2) : l.gain.exponentialRampToValueAtTime(.001, e.currentTime + .2); const t = this.querySelector("i"); t.classList.toggle("fa-volume-up"), t.classList.toggle("fa-volume-off") }); const b = tracks.map(e => e.name), N = () => (function (...e) { _.shuffle([...e]).forEach(e => S.appendChild(e)) })(function (t) { const o = document.createElement("button"); return o.textContent = `${t.name}`, o.addEventListener("click", () => { D("./audio/sfx/success/gregg-omnisphere5.mp3", n = e.createBufferSource()), n.start(), i.gain.setValueAtTime(1, e.currentTime), n.connect(i), i.connect(l), l.connect(e.destination), V(), A.src = "", C.style.display = "none", p.classList.add("success"), u.textContent = w += 100, R() }, { once: !0 }), o }(E), function () { const t = document.createElement("button"); for (; !t.textContent;) { let e = $(b); e !== E.name && (t.textContent = e) } return t.addEventListener("click", () => { D("./audio/sfx/failure/2_DANCE_FX_DANCE_1_003.mp3", o = e.createBufferSource()), o.start(), r.gain.setValueAtTime(1, e.currentTime), o.connect(r), r.connect(l), l.connect(e.destination), V(), A.src = "", C.style.display = "none", g.classList.add("failure"), 0 == (k -= 1) ? (d.textContent = 0, z()) : (d.textContent = k, R()) }, { once: !0 }), t }()), B = () => tracks[Math.floor(Math.random() * tracks.length)], $ = e => e[Math.floor(Math.random() * b.length)]; function G() { s.gain.value = 0, y.style.display = "none", C.style.display = x.style.display = q.style.display = "block", v.textContent = "", w = 0, k = 3, d.textContent = k, u.textContent = w, L = 1, T.textContent = `${L}/10`, M(), P(), H(), N(), U() } function M() { P(), Array.from(S.children).forEach(e => { "BUTTON" === e.tagName && S.removeChild(e) }) } function V() { Array.from(S.children).forEach(e => { "BUTTON" === e.tagName && (e.style.display = "none") }) } function D(t, n) { fetch(t).then(e => e.arrayBuffer()).then(t => e.decodeAudioData(t, e => { n.buffer = e, n.start() }, e => { console.error(e) })) } function H() { E = B(), t = e.createBufferSource(), D(`./audio/cuts/${E.fileName}`, t), t.loop = !0, t.connect(c), c.gain.setValueAtTime(1, e.currentTime), c.connect(l), l.connect(e.destination) } function O() { A.style.display = "block", A.src = `./images/optimized/${E.image}`, A.style.width = "300px", A.style.height = "300px", f.appendChild(A) } function F() { const e = document.createElement("h3"); e.classList.add("name-display"), e.textContent = E.name, f.appendChild(e) } function P() { p.className = "", g.className = "" } function R() { O(), F(), c.gain.setTargetAtTime(0, e.currentTime, .03), t.stop(e.currentTime + .03), setTimeout(() => { 10 === L ? (U(), z()) : (T.textContent = `${L += 1}/10`, C.style.display = "block", A.style.display = "none", U(), H(), M(), N()) }, 2e3) } function U() { Array.from(f.children).forEach(e => { "H3" === e.tagName && f.removeChild(e) }) } function z() { O(), F(), c.gain.setTargetAtTime(0, e.currentTime, .03), void 0 !== window.safari ? t.disconnect(e.destination) : t.stop(e.currentTime), setTimeout(() => { D("./audio/sfx/game_over/Cutting Power.mp3", a = e.createBufferSource()), a.start(), s.gain.setValueAtTime(1, e.currentTime), a.connect(s), s.connect(l), l.connect(e.destination), A.style.display = x.style.display = "none", v.innerHTML = `<h1>Game Over<h1>\n                                        <h2>Final Score: ${w}<h2>`, v.classList.add("game-over-display"), function () { const e = document.createElement("button"); e.innerHTML = '\n                <i class="fa fa-play" aria-hidden="true"></i>\n                <span>Play Again?</span>', e.classList.add("play-again-btn"), v.appendChild(e), e.addEventListener("click", () => G()) }() }, 2e3) } A.style.display = x.style.display = "none", m.addEventListener("click", () => { e.resume().then(() => G()) }) }();